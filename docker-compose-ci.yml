services:
  backend:
    container_name: "manga_backend"
    image: manga-api-image:latest
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - /mnt/nfs/share/media:/app/media
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
       - manga_net

  db:
    image: postgres
    container_name: 'manga_db'
    restart: always
    shm_size: 128mb
    ports:
      - 5431:5432
    volumes:
      - /var/lib/manga/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: manga
      POSTGRES_PASSWORD: manga
      POSTGRES_DB: manga
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
       - manga_net

  redis:
    image: redis:7.4-alpine
    container_name: 'manga_redis'
    restart: always
    volumes: 
      - /var/lib/manga/cache:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    networks:
       - manga_net

  celery_worker:
    container_name: "manga_celery_worker"
    image: manga-api-image:latest
    command: "celery --app=src.tasks.celery:celery_app worker -l INFO"
    depends_on:
      - backend
    networks:
       - manga_net

  celery_beat:
    container_name: "manga_celery_beat"
    image: manga-api-image:latest
    command: "celery --app=src.tasks.celery:celery_app beat -l INFO"
    depends_on:
      - backend
    networks:
       - manga_net

  flower:
    container_name: "manga_flower"
    image: manga-api-image:latest
    command: "celery --app=src.tasks.celery:celery_app flower --port=5555"
    ports:
      - 5555:5555
    depends_on:
      - backend
    networks:
       - manga_net

  frontend:
    image: manga-frontend-image:latest
    container_name: manga_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - 3080:3000
    networks:
      - manga_net

  nginx:
    container_name: manga_proxy
    depends_on:
      - backend
      - frontend
    restart: always
    image: nginx
    ports:
      - "5050:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - manga_net

networks:
   manga_net:
    name: manga_net
    external: true